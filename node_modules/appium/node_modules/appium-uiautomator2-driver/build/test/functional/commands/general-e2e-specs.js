'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _ = require('../../..');

var _2 = _interopRequireDefault(_);

var _sampleApps = require('sample-apps');

var _sampleApps2 = _interopRequireDefault(_sampleApps);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var driver = undefined;
var defaultCaps = {
  app: (0, _sampleApps2['default'])('ApiDemos-debug'),
  deviceName: 'Android',
  platformName: 'Android'
};

describe('general', function () {
  describe('startActivity', function () {
    var _this = this;

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver = new _2['default']();
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.createSession(defaultCaps));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.deleteSession());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should launch a new package and activity', function callee$2$0() {
      var _ref, appPackage, appActivity, startAppPackage, startAppActivity, _ref2, newAppPackage, newAppActivity;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

          case 2:
            _ref = context$3$0.sent;
            appPackage = _ref.appPackage;
            appActivity = _ref.appActivity;

            appPackage.should.equal('io.appium.android.apis');
            appActivity.should.equal('.ApiDemos');

            startAppPackage = 'io.appium.android.apis';
            startAppActivity = '.view.SplitTouchView';
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.startActivity(startAppPackage, startAppActivity));

          case 11:
            context$3$0.next = 13;
            return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

          case 13:
            _ref2 = context$3$0.sent;
            newAppPackage = _ref2.appPackage;
            newAppActivity = _ref2.appActivity;

            newAppPackage.should.equal(startAppPackage);
            newAppActivity.should.equal(startAppActivity);

          case 18:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should be able to launch activity with custom intent parameter category', function callee$2$0() {
      var startAppPackage, startAppActivity, startIntentCategory, _ref3, appActivity;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            startAppPackage = 'io.appium.android.apis';
            startAppActivity = 'io.appium.android.apis.app.HelloWorld';
            startIntentCategory = 'appium.android.intent.category.SAMPLE_CODE';
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.startActivity(startAppPackage, startAppActivity, undefined, undefined, startIntentCategory));

          case 5:
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

          case 7:
            _ref3 = context$3$0.sent;
            appActivity = _ref3.appActivity;

            appActivity.should.include('HelloWorld');

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should be able to launch activity with dontStopAppOnReset = true', function callee$2$0() {
      var startAppPackage, startAppActivity, _ref4, appPackage, appActivity;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            startAppPackage = 'io.appium.android.apis';
            startAppActivity = '.os.MorseCode';
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.startActivity(startAppPackage, startAppActivity, startAppPackage, startAppActivity, undefined, undefined, undefined, undefined, true));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

          case 6:
            _ref4 = context$3$0.sent;
            appPackage = _ref4.appPackage;
            appActivity = _ref4.appActivity;

            appPackage.should.equal(startAppPackage);
            appActivity.should.equal(startAppActivity);

          case 11:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should be able to launch activity with dontStopAppOnReset = false', function callee$2$0() {
      var startAppPackage, startAppActivity, _ref5, appPackage, appActivity;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            startAppPackage = 'io.appium.android.apis';
            startAppActivity = '.os.MorseCode';
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.startActivity(startAppPackage, startAppActivity, startAppPackage, startAppActivity, undefined, undefined, undefined, undefined, false));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

          case 6:
            _ref5 = context$3$0.sent;
            appPackage = _ref5.appPackage;
            appActivity = _ref5.appActivity;

            appPackage.should.equal(startAppPackage);
            appActivity.should.equal(startAppActivity);

          case 11:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });
  describe('getStrings', function () {
    var _this2 = this;

    before(function callee$2$0() {
      var contactCaps;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver = new _2['default']();
            contactCaps = _Object$assign({}, defaultCaps, { app: (0, _sampleApps2['default'])('ContactManager') });
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.createSession(contactCaps));

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.deleteSession());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });

    it('should return app strings', function callee$2$0() {
      var strings;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getStrings('en'));

          case 2:
            strings = context$3$0.sent;

            strings.save.should.equal('Save');

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
    it('should return app strings for the device language', function callee$2$0() {
      var strings;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getStrings());

          case 2:
            strings = context$3$0.sent;

            strings.save.should.equal('Save');

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });
});
//# sourceMappingURL=data:application/json;base64,