'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _asyncbox = require('asyncbox');

var _ = require('../../..');

var _2 = _interopRequireDefault(_);

var _sampleApps = require('sample-apps');

var _sampleApps2 = _interopRequireDefault(_sampleApps);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var driver = undefined;
var caps = {
  app: (0, _sampleApps2['default'])('gpsDemo-debug'),
  deviceName: 'Android',
  platformName: 'Android'
};

describe.skip("geo-location", function () {
  var _this = this;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          driver = new _2['default']();
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.createSession(caps));

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should set geo location @skip-ci', function callee$1$0() {
    var getText, latitude, longitude, text;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      var _this2 = this;

      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          getText = function getText() {
            var els;
            return _regeneratorRuntime.async(function getText$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.findElOrEls('class name', 'android.widget.TextView', true));

                case 2:
                  els = context$3$0.sent;
                  context$3$0.next = 5;
                  return _regeneratorRuntime.awrap(driver.getText(els[1].ELEMENT));

                case 5:
                  return context$3$0.abrupt('return', context$3$0.sent);

                case 6:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, _this2);
          };

          latitude = '27.17';
          longitude = '78.04';
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(getText());

        case 5:
          text = context$2$0.sent;

          text.should.not.include('Latitude: ' + latitude);
          text.should.not.include('Longitude: ' + longitude);

          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.setGeoLocation({ latitude: latitude, longitude: longitude }));

        case 10:
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap((0, _asyncbox.retryInterval)(6, 1000, function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(getText());

                case 2:
                  context$3$0.t0 = context$3$0.sent;

                  if (!(context$3$0.t0 === 'GPS Tutorial')) {
                    context$3$0.next = 5;
                    break;
                  }

                  throw new Error('Location not set yet. Retry.');

                case 5:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, _this2);
          }));

        case 12:
          context$2$0.next = 14;
          return _regeneratorRuntime.awrap(getText());

        case 14:
          text = context$2$0.sent;

          text.should.include('Latitude: ' + latitude);
          text.should.include('Longitude: ' + longitude);

        case 17:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});

// wait for the text to change
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RcXGZ1bmN0aW9uYWxcXGNvbW1hbmRzXFxnZW8tbG9jYXRpb24tZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztvQkFBaUIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7d0JBQ2YsVUFBVTs7Z0JBQ0YsVUFBVTs7OzswQkFDekIsYUFBYTs7OztBQUdwQyxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLElBQUksTUFBTSxZQUFBLENBQUM7QUFDWCxJQUFJLElBQUksR0FBRztBQUNULEtBQUcsRUFBRSw2QkFBVyxlQUFlLENBQUM7QUFDaEMsWUFBVSxFQUFFLFNBQVM7QUFDckIsY0FBWSxFQUFFLFNBQVM7Q0FDeEIsQ0FBQzs7QUFFRixRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxZQUFZOzs7QUFDeEMsUUFBTSxDQUFDOzs7O0FBQ0wsZ0JBQU0sR0FBRyxtQkFBK0IsQ0FBQzs7MkNBQ25DLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0dBQ2pDLENBQUMsQ0FBQztBQUNILE9BQUssQ0FBQzs7Ozs7MkNBQ0UsTUFBTSxDQUFDLGFBQWEsRUFBRTs7Ozs7OztHQUM3QixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLGtDQUFrQyxFQUFFO1FBQ2pDLE9BQU8sRUFLUCxRQUFRLEVBQ1IsU0FBUyxFQUVULElBQUk7Ozs7OztBQVJKLGlCQUFPLEdBQUcsU0FBVixPQUFPO2dCQUNMLEdBQUc7Ozs7O21EQUFTLE1BQU0sQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLHlCQUF5QixFQUFFLElBQUksQ0FBQzs7O0FBQTdFLHFCQUFHOzttREFDTSxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7V0FDNUM7O0FBRUcsa0JBQVEsR0FBRyxPQUFPO0FBQ2xCLG1CQUFTLEdBQUcsT0FBTzs7MkNBRU4sT0FBTyxFQUFFOzs7QUFBdEIsY0FBSTs7QUFDUixjQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLGdCQUFjLFFBQVEsQ0FBRyxDQUFDO0FBQ2pELGNBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8saUJBQWUsU0FBUyxDQUFHLENBQUM7OzsyQ0FFN0MsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFDLFFBQVEsRUFBUixRQUFRLEVBQUUsU0FBUyxFQUFULFNBQVMsRUFBQyxDQUFDOzs7OzJDQUc1Qyw2QkFBYyxDQUFDLEVBQUUsSUFBSSxFQUFFOzs7OzttREFDakIsT0FBTyxFQUFFOzs7OzsyQ0FBSyxjQUFjOzs7Ozt3QkFDOUIsSUFBSSxLQUFLLENBQUMsOEJBQThCLENBQUM7Ozs7Ozs7V0FFbEQsQ0FBQzs7OzsyQ0FFVyxPQUFPLEVBQUU7OztBQUF0QixjQUFJOztBQUNKLGNBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxnQkFBYyxRQUFRLENBQUcsQ0FBQztBQUM3QyxjQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8saUJBQWUsU0FBUyxDQUFHLENBQUM7Ozs7Ozs7R0FDaEQsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3RcXGZ1bmN0aW9uYWxcXGNvbW1hbmRzXFxnZW8tbG9jYXRpb24tZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XHJcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcclxuaW1wb3J0IHsgcmV0cnlJbnRlcnZhbCB9IGZyb20gJ2FzeW5jYm94JztcclxuaW1wb3J0IEFuZHJvaWRVaWF1dG9tYXRvcjJEcml2ZXIgZnJvbSAnLi4vLi4vLi4nO1xyXG5pbXBvcnQgc2FtcGxlQXBwcyBmcm9tICdzYW1wbGUtYXBwcyc7XHJcblxyXG5cclxuY2hhaS5zaG91bGQoKTtcclxuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xyXG5cclxubGV0IGRyaXZlcjtcclxubGV0IGNhcHMgPSB7XHJcbiAgYXBwOiBzYW1wbGVBcHBzKCdncHNEZW1vLWRlYnVnJyksXHJcbiAgZGV2aWNlTmFtZTogJ0FuZHJvaWQnLFxyXG4gIHBsYXRmb3JtTmFtZTogJ0FuZHJvaWQnXHJcbn07XHJcblxyXG5kZXNjcmliZS5za2lwKFwiZ2VvLWxvY2F0aW9uXCIsIGZ1bmN0aW9uICgpIHtcclxuICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xyXG4gICAgZHJpdmVyID0gbmV3IEFuZHJvaWRVaWF1dG9tYXRvcjJEcml2ZXIoKTtcclxuICAgIGF3YWl0IGRyaXZlci5jcmVhdGVTZXNzaW9uKGNhcHMpO1xyXG4gIH0pO1xyXG4gIGFmdGVyKGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IGRyaXZlci5kZWxldGVTZXNzaW9uKCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdzaG91bGQgc2V0IGdlbyBsb2NhdGlvbiBAc2tpcC1jaScsIGFzeW5jICgpID0+IHtcclxuICAgIGxldCBnZXRUZXh0ID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICBsZXQgZWxzID0gYXdhaXQgZHJpdmVyLmZpbmRFbE9yRWxzKCdjbGFzcyBuYW1lJywgJ2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3JywgdHJ1ZSk7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkcml2ZXIuZ2V0VGV4dChlbHNbMV0uRUxFTUVOVCk7XHJcbiAgICB9O1xyXG5cclxuICAgIGxldCBsYXRpdHVkZSA9ICcyNy4xNyc7XHJcbiAgICBsZXQgbG9uZ2l0dWRlID0gJzc4LjA0JztcclxuXHJcbiAgICBsZXQgdGV4dCA9IGF3YWl0IGdldFRleHQoKTtcclxuICAgIHRleHQuc2hvdWxkLm5vdC5pbmNsdWRlKGBMYXRpdHVkZTogJHtsYXRpdHVkZX1gKTtcclxuICAgIHRleHQuc2hvdWxkLm5vdC5pbmNsdWRlKGBMb25naXR1ZGU6ICR7bG9uZ2l0dWRlfWApO1xyXG5cclxuICAgIGF3YWl0IGRyaXZlci5zZXRHZW9Mb2NhdGlvbih7bGF0aXR1ZGUsIGxvbmdpdHVkZX0pO1xyXG5cclxuICAgIC8vIHdhaXQgZm9yIHRoZSB0ZXh0IHRvIGNoYW5nZVxyXG4gICAgYXdhaXQgcmV0cnlJbnRlcnZhbCg2LCAxMDAwLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGlmIChhd2FpdCBnZXRUZXh0KCkgPT09ICdHUFMgVHV0b3JpYWwnKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdMb2NhdGlvbiBub3Qgc2V0IHlldC4gUmV0cnkuJyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHRleHQgPSBhd2FpdCBnZXRUZXh0KCk7XHJcbiAgICB0ZXh0LnNob3VsZC5pbmNsdWRlKGBMYXRpdHVkZTogJHtsYXRpdHVkZX1gKTtcclxuICAgIHRleHQuc2hvdWxkLmluY2x1ZGUoYExvbmdpdHVkZTogJHtsb25naXR1ZGV9YCk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXX0=