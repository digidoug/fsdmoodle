'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _teen_process = require('teen_process');

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

// tails a file, promise resolves when input string is written to file
function tailUntil(filePath, until) {
  var timeout = arguments.length <= 2 || arguments[2] === undefined ? 5000 : arguments[2];
  var proc, startDetector;
  return _regeneratorRuntime.async(function tailUntil$(context$1$0) {
    var _this = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        proc = new _teen_process.SubProcess('tail', ['-f', '-n', '100', filePath]);

        startDetector = function startDetector(stdout) {
          return stdout.indexOf(until) > -1;
        };

        return context$1$0.abrupt('return', new _bluebird2['default'](function callee$1$0(resolve, reject) {
          var started, timedout;
          return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                started = proc.start(startDetector);
                timedout = _bluebird2['default'].delay(timeout).then(function () {
                  return reject('tailing file ' + filePath + ' failed after ' + timeout + 'ms');
                });
                context$2$0.next = 4;
                return _regeneratorRuntime.awrap(_bluebird2['default'].race([started, timedout]));

              case 4:

                resolve();

              case 5:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this);
        })['finally'](function callee$1$0() {
          return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                if (!proc.isRunning) {
                  context$2$0.next = 9;
                  break;
                }

                context$2$0.prev = 1;
                context$2$0.next = 4;
                return _regeneratorRuntime.awrap(proc.stop());

              case 4:
                context$2$0.next = 9;
                break;

              case 6:
                context$2$0.prev = 6;
                context$2$0.t0 = context$2$0['catch'](1);

                // there is not much we can do here, unfortunately, but log
                _logger2['default'].info('Stopping tail process failed: ' + context$2$0.t0.message);

              case 9:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this, [[1, 6]]);
        }));

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.tailUntil = tailUntil;

// // for debugging
// function consoleOut (...args) {
//   console.log(`>>> ${args}`); // eslint-disable-line no-console
// }
// proc.on('output', consoleOut);

/* eslint-disable promise/prefer-await-to-then */

/* eslint-enable */

// no matter what, stop the tail process
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWlsLXVudGlsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7NEJBQTJCLGNBQWM7O3dCQUMzQixVQUFVOzs7O3NCQUNSLFVBQVU7Ozs7O0FBRzFCLFNBQWUsU0FBUyxDQUFFLFFBQVEsRUFBRSxLQUFLO01BQUUsT0FBTyx5REFBRyxJQUFJO01BQ25ELElBQUksRUFRSixhQUFhOzs7Ozs7QUFSYixZQUFJLEdBQUcsNkJBQWUsTUFBTSxFQUFFLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7O0FBUTVELHFCQUFhLEdBQUcsU0FBaEIsYUFBYSxDQUFJLE1BQU0sRUFBSztBQUM5QixpQkFBTyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ25DOzs0Q0FFTSwwQkFBTSxvQkFBTyxPQUFPLEVBQUUsTUFBTTtjQUM3QixPQUFPLEVBR1AsUUFBUTs7OztBQUhSLHVCQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUM7QUFHbkMsd0JBQVEsR0FBRyxzQkFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQU07QUFDekMseUJBQU8sTUFBTSxtQkFBaUIsUUFBUSxzQkFBaUIsT0FBTyxRQUFLLENBQUM7aUJBQ3JFLENBQUM7O2lEQUdJLHNCQUFFLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQzs7OztBQUVqQyx1QkFBTyxFQUFFLENBQUM7Ozs7Ozs7U0FDWCxDQUFDLFdBQVEsQ0FBQzs7OztxQkFFTCxJQUFJLENBQUMsU0FBUzs7Ozs7OztpREFFUixJQUFJLENBQUMsSUFBSSxFQUFFOzs7Ozs7Ozs7OztBQUdqQixvQ0FBSSxJQUFJLG9DQUFrQyxlQUFJLE9BQU8sQ0FBRyxDQUFDOzs7Ozs7O1NBRzlELENBQUM7Ozs7Ozs7Q0FDSDs7UUFFUSxTQUFTLEdBQVQsU0FBUyIsImZpbGUiOiJsaWIvdGFpbC11bnRpbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN1YlByb2Nlc3MgfSBmcm9tICd0ZWVuX3Byb2Nlc3MnO1xuaW1wb3J0IEIgZnJvbSAnYmx1ZWJpcmQnO1xuaW1wb3J0IGxvZyBmcm9tICcuL2xvZ2dlcic7XG5cbi8vIHRhaWxzIGEgZmlsZSwgcHJvbWlzZSByZXNvbHZlcyB3aGVuIGlucHV0IHN0cmluZyBpcyB3cml0dGVuIHRvIGZpbGVcbmFzeW5jIGZ1bmN0aW9uIHRhaWxVbnRpbCAoZmlsZVBhdGgsIHVudGlsLCB0aW1lb3V0ID0gNTAwMCkge1xuICBsZXQgcHJvYyA9IG5ldyBTdWJQcm9jZXNzKCd0YWlsJywgWyctZicsICctbicsICcxMDAnLCBmaWxlUGF0aF0pO1xuXG4gIC8vIC8vIGZvciBkZWJ1Z2dpbmdcbiAgLy8gZnVuY3Rpb24gY29uc29sZU91dCAoLi4uYXJncykge1xuICAvLyAgIGNvbnNvbGUubG9nKGA+Pj4gJHthcmdzfWApOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgLy8gfVxuICAvLyBwcm9jLm9uKCdvdXRwdXQnLCBjb25zb2xlT3V0KTtcblxuICBsZXQgc3RhcnREZXRlY3RvciA9IChzdGRvdXQpID0+IHtcbiAgICByZXR1cm4gc3Rkb3V0LmluZGV4T2YodW50aWwpID4gLTE7XG4gIH07XG5cbiAgcmV0dXJuIG5ldyBCKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBsZXQgc3RhcnRlZCA9IHByb2Muc3RhcnQoc3RhcnREZXRlY3Rvcik7XG5cbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBwcm9taXNlL3ByZWZlci1hd2FpdC10by10aGVuICovXG4gICAgbGV0IHRpbWVkb3V0ID0gQi5kZWxheSh0aW1lb3V0KS50aGVuKCgpID0+IHtcbiAgICAgIHJldHVybiByZWplY3QoYHRhaWxpbmcgZmlsZSAke2ZpbGVQYXRofSBmYWlsZWQgYWZ0ZXIgJHt0aW1lb3V0fW1zYCk7XG4gICAgfSk7XG4gICAgLyogZXNsaW50LWVuYWJsZSAqL1xuXG4gICAgYXdhaXQgQi5yYWNlKFtzdGFydGVkLCB0aW1lZG91dF0pO1xuXG4gICAgcmVzb2x2ZSgpO1xuICB9KS5maW5hbGx5KGFzeW5jICgpID0+IHtcbiAgICAvLyBubyBtYXR0ZXIgd2hhdCwgc3RvcCB0aGUgdGFpbCBwcm9jZXNzXG4gICAgaWYgKHByb2MuaXNSdW5uaW5nKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBwcm9jLnN0b3AoKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAvLyB0aGVyZSBpcyBub3QgbXVjaCB3ZSBjYW4gZG8gaGVyZSwgdW5mb3J0dW5hdGVseSwgYnV0IGxvZ1xuICAgICAgICBsb2cuaW5mbyhgU3RvcHBpbmcgdGFpbCBwcm9jZXNzIGZhaWxlZDogJHtlcnIubWVzc2FnZX1gKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgeyB0YWlsVW50aWwgfTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
